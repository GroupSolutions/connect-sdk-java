/*
 * This class was auto-generated from the API references found at
 * https://epayments-api.developer-ingenico.com/s2sapi/v1/
 */
package com.ingenico.connect.gateway.sdk.java.domain.hostedcheckout;

import java.util.List;

public class CreateHostedCheckoutResponse {

	private String RETURNMAC = null;

	private String hostedCheckoutId = null;

	private List<String> invalidTokens = null;

	private String merchantReference = null;

	private String partialRedirectUrl = null;

	/**
	 * When the consumer is returned to your site we will append this field and value to the query-string. You should store this data, so you can identify the returning consumer.
	 */
	public String getRETURNMAC() {
		return RETURNMAC;
	}

	/**
	 * When the consumer is returned to your site we will append this field and value to the query-string. You should store this data, so you can identify the returning consumer.
	 */
	public void setRETURNMAC(String value) {
		this.RETURNMAC = value;
	}

	/**
	 * This is the ID under which the data for this checkout can be retrieved.
	 */
	public String getHostedCheckoutId() {
		return hostedCheckoutId;
	}

	/**
	 * This is the ID under which the data for this checkout can be retrieved.
	 */
	public void setHostedCheckoutId(String value) {
		this.hostedCheckoutId = value;
	}

	/**
	 * Tokens that are submitted in the request are validated. In case any of the tokens can't be used anymore they are returned in this array. You should most likely remove those tokens from your system.
	 */
	public List<String> getInvalidTokens() {
		return invalidTokens;
	}

	/**
	 * Tokens that are submitted in the request are validated. In case any of the tokens can't be used anymore they are returned in this array. You should most likely remove those tokens from your system.
	 */
	public void setInvalidTokens(List<String> value) {
		this.invalidTokens = value;
	}

	/**
	 * This property will contain the <span class="property">merchantReference</span> you provided in case you included one in the Create Hosted Checkout API call. In case you didn't provide one the system will generate one for you (for the Ogone payment platform only) to allow you to link any created payment to this hostedCheckout.
	 * To relate a payment done by the consumer in a hostedCheckout session you can use the following fields:
	 * <ul class="paragraph-width"><li><span class="property">paymentOutput.references.merchantReference</span> (for the GlobalCollect payment engine this is only possible when you supply a <span class="property">merchantReference</span> during the creation of the hostedCheckout)</li>
	 * <li>hostedCheckoutSpecificOutput.hostedCheckoutId (only returned when using the GlobalCollect payment engine)</li></ul>
	 */
	public String getMerchantReference() {
		return merchantReference;
	}

	/**
	 * This property will contain the <span class="property">merchantReference</span> you provided in case you included one in the Create Hosted Checkout API call. In case you didn't provide one the system will generate one for you (for the Ogone payment platform only) to allow you to link any created payment to this hostedCheckout.
	 * To relate a payment done by the consumer in a hostedCheckout session you can use the following fields:
	 * <ul class="paragraph-width"><li><span class="property">paymentOutput.references.merchantReference</span> (for the GlobalCollect payment engine this is only possible when you supply a <span class="property">merchantReference</span> during the creation of the hostedCheckout)</li>
	 * <li>hostedCheckoutSpecificOutput.hostedCheckoutId (only returned when using the GlobalCollect payment engine)</li></ul>
	 */
	public void setMerchantReference(String value) {
		this.merchantReference = value;
	}

	/**
	 * The partial URL as generated by our system. You will need to add the protocol and the relevant subdomain to this URL, before redirecting your consumer to this URL. A special 'payment' subdomain will always work so you can always add 'https://payment.' at the beginning of this response value to view your MyCheckout hosted payment pages.
	 */
	public String getPartialRedirectUrl() {
		return partialRedirectUrl;
	}

	/**
	 * The partial URL as generated by our system. You will need to add the protocol and the relevant subdomain to this URL, before redirecting your consumer to this URL. A special 'payment' subdomain will always work so you can always add 'https://payment.' at the beginning of this response value to view your MyCheckout hosted payment pages.
	 */
	public void setPartialRedirectUrl(String value) {
		this.partialRedirectUrl = value;
	}
}
